{"ast":null,"code":"import { getDayEnd, getDayStart, getDecadeEnd, getDecadeStart, getMonthEnd, getMonthStart, getYearEnd, getYearStart } from '@wojtekmaj/date-utils';\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of the range.\n */\nexport function getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getDecadeStart(date);\n    case 'year':\n      return getYearStart(date);\n    case 'month':\n      return getMonthStart(date);\n    case 'day':\n      return getDayStart(date);\n    default:\n      throw new Error(`Invalid rangeType: ${rangeType}`);\n  }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} End of the range.\n */\nexport function getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getDecadeEnd(date);\n    case 'year':\n      return getYearEnd(date);\n    case 'month':\n      return getMonthEnd(date);\n    case 'day':\n      return getDayEnd(date);\n    default:\n      throw new Error(`Invalid rangeType: ${rangeType}`);\n  }\n}","map":{"version":3,"names":["getDayEnd","getDayStart","getDecadeEnd","getDecadeStart","getMonthEnd","getMonthStart","getYearEnd","getYearStart","getBegin","rangeType","date","Error","getEnd"],"sources":["D:/New folder/Leave_Management_System/LeaveManagementSystemFrontend/leavemanagementFrontend/node_modules/react-date-picker/dist/shared/dates.js"],"sourcesContent":["import { getDayEnd, getDayStart, getDecadeEnd, getDecadeStart, getMonthEnd, getMonthStart, getYearEnd, getYearStart, } from '@wojtekmaj/date-utils';\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} Beginning of the range.\n */\nexport function getBegin(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return getDecadeStart(date);\n        case 'year':\n            return getYearStart(date);\n        case 'month':\n            return getMonthStart(date);\n        case 'day':\n            return getDayStart(date);\n        default:\n            throw new Error(`Invalid rangeType: ${rangeType}`);\n    }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n * @returns {Date} End of the range.\n */\nexport function getEnd(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return getDecadeEnd(date);\n        case 'year':\n            return getYearEnd(date);\n        case 'month':\n            return getMonthEnd(date);\n        case 'day':\n            return getDayEnd(date);\n        default:\n            throw new Error(`Invalid rangeType: ${rangeType}`);\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,EAAEC,WAAW,EAAEC,aAAa,EAAEC,UAAU,EAAEC,YAAY,QAAS,uBAAuB;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,SAAS,EAAEC,IAAI,EAAE;EACtC,QAAQD,SAAS;IACb,KAAK,QAAQ;MACT,OAAON,cAAc,CAACO,IAAI,CAAC;IAC/B,KAAK,MAAM;MACP,OAAOH,YAAY,CAACG,IAAI,CAAC;IAC7B,KAAK,OAAO;MACR,OAAOL,aAAa,CAACK,IAAI,CAAC;IAC9B,KAAK,KAAK;MACN,OAAOT,WAAW,CAACS,IAAI,CAAC;IAC5B;MACI,MAAM,IAAIC,KAAK,CAAC,sBAAsBF,SAAS,EAAE,CAAC;EAC1D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,MAAMA,CAACH,SAAS,EAAEC,IAAI,EAAE;EACpC,QAAQD,SAAS;IACb,KAAK,QAAQ;MACT,OAAOP,YAAY,CAACQ,IAAI,CAAC;IAC7B,KAAK,MAAM;MACP,OAAOJ,UAAU,CAACI,IAAI,CAAC;IAC3B,KAAK,OAAO;MACR,OAAON,WAAW,CAACM,IAAI,CAAC;IAC5B,KAAK,KAAK;MACN,OAAOV,SAAS,CAACU,IAAI,CAAC;IAC1B;MACI,MAAM,IAAIC,KAAK,CAAC,sBAAsBF,SAAS,EAAE,CAAC;EAC1D;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
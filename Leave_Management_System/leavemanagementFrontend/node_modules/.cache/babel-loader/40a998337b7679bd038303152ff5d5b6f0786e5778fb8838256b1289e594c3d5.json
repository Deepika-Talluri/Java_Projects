{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useLayoutEffect } from 'react';\nimport clsx from 'clsx';\nimport updateInputWidth, { getFontShorthand } from 'update-input-width';\nconst isBrowser = typeof window !== 'undefined';\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nconst isIEOrEdgeLegacy = isBrowser && /(MSIE|Trident\\/|Edge\\/)/.test(navigator.userAgent);\nconst isFirefox = isBrowser && /Firefox/.test(navigator.userAgent);\nfunction onFocus(event) {\n  const {\n    target\n  } = event;\n  if (isIEOrEdgeLegacy) {\n    requestAnimationFrame(() => target.select());\n  } else {\n    target.select();\n  }\n}\nfunction updateInputWidthOnLoad(element) {\n  if (document.readyState === 'complete') {\n    return;\n  }\n  function onLoad() {\n    updateInputWidth(element);\n  }\n  window.addEventListener('load', onLoad);\n}\nfunction updateInputWidthOnFontLoad(element) {\n  if (!document.fonts) {\n    return;\n  }\n  const font = getFontShorthand(element);\n  if (!font) {\n    return;\n  }\n  const isFontLoaded = document.fonts.check(font);\n  if (isFontLoaded) {\n    return;\n  }\n  function onLoadingDone() {\n    updateInputWidth(element);\n  }\n  document.fonts.addEventListener('loadingdone', onLoadingDone);\n}\nfunction getSelectionString(input) {\n  /**\n   * window.getSelection().toString() returns empty string in IE11 and Firefox,\n   * so alternatives come first.\n   */\n  if (input && 'selectionStart' in input && input.selectionStart !== null && 'selectionEnd' in input && input.selectionEnd !== null) {\n    return input.value.slice(input.selectionStart, input.selectionEnd);\n  }\n  if ('getSelection' in window) {\n    const selection = window.getSelection();\n    return selection === null || selection === void 0 ? void 0 : selection.toString();\n  }\n  return null;\n}\nfunction makeOnKeyPress(maxLength) {\n  if (maxLength === null) {\n    return undefined;\n  }\n  /**\n   * Prevents keystrokes that would not produce a number or when value after keystroke would\n   * exceed maxLength.\n   */\n  return function onKeyPress(event) {\n    if (isFirefox) {\n      // See https://github.com/wojtekmaj/react-time-picker/issues/92\n      return;\n    }\n    const {\n      key,\n      target: input\n    } = event;\n    const {\n      value\n    } = input;\n    const isNumberKey = key.length === 1 && /\\d/.test(key);\n    const selection = getSelectionString(input);\n    if (!isNumberKey || !(selection || value.length < maxLength)) {\n      event.preventDefault();\n    }\n  };\n}\nexport default function Input({\n  ariaLabel,\n  autoFocus,\n  className,\n  disabled,\n  inputRef,\n  max,\n  min,\n  name,\n  nameForClass,\n  onChange,\n  onKeyDown,\n  onKeyUp,\n  placeholder = '--',\n  required,\n  showLeadingZeros,\n  step,\n  value\n}) {\n  useIsomorphicLayoutEffect(() => {\n    if (!inputRef || !inputRef.current) {\n      return;\n    }\n    updateInputWidth(inputRef.current);\n    updateInputWidthOnLoad(inputRef.current);\n    updateInputWidthOnFontLoad(inputRef.current);\n  }, [inputRef, value]);\n  const hasLeadingZero = showLeadingZeros && value && Number(value) < 10 && (value === '0' || !value.toString().startsWith('0'));\n  const maxLength = max ? max.toString().length : null;\n  return _jsxs(_Fragment, {\n    children: [hasLeadingZero ? _jsx(\"span\", {\n      className: `${className}__leadingZero`,\n      children: \"0\"\n    }) : null, _jsx(\"input\", {\n      \"aria-label\": ariaLabel,\n      autoComplete: \"off\",\n      // biome-ignore lint/a11y/noAutofocus: This is up to developers' decision\n      autoFocus: autoFocus,\n      className: clsx(`${className}__input`, `${className}__${nameForClass || name}`, hasLeadingZero && `${className}__input--hasLeadingZero`),\n      \"data-input\": \"true\",\n      disabled: disabled,\n      inputMode: \"numeric\",\n      max: max,\n      min: min,\n      name: name,\n      onChange: onChange,\n      onFocus: onFocus,\n      onKeyDown: onKeyDown,\n      onKeyPress: makeOnKeyPress(maxLength),\n      onKeyUp: event => {\n        updateInputWidth(event.target);\n        if (onKeyUp) {\n          onKeyUp(event);\n        }\n      },\n      placeholder: placeholder,\n      // Assertion is needed for React 18 compatibility\n      ref: inputRef,\n      required: required,\n      step: step,\n      type: \"number\",\n      value: value !== null ? value : ''\n    })]\n  });\n}","map":{"version":3,"names":["jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","useEffect","useLayoutEffect","clsx","updateInputWidth","getFontShorthand","isBrowser","window","useIsomorphicLayoutEffect","isIEOrEdgeLegacy","test","navigator","userAgent","isFirefox","onFocus","event","target","requestAnimationFrame","select","updateInputWidthOnLoad","element","document","readyState","onLoad","addEventListener","updateInputWidthOnFontLoad","fonts","font","isFontLoaded","check","onLoadingDone","getSelectionString","input","selectionStart","selectionEnd","value","slice","selection","getSelection","toString","makeOnKeyPress","maxLength","undefined","onKeyPress","key","isNumberKey","length","preventDefault","Input","ariaLabel","autoFocus","className","disabled","inputRef","max","min","name","nameForClass","onChange","onKeyDown","onKeyUp","placeholder","required","showLeadingZeros","step","current","hasLeadingZero","Number","startsWith","children","autoComplete","inputMode","ref","type"],"sources":["D:/New folder/Leave_Management_System/LeaveManagementSystemFrontend/leavemanagementFrontend/node_modules/react-date-picker/dist/DateInput/Input.js"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useLayoutEffect } from 'react';\nimport clsx from 'clsx';\nimport updateInputWidth, { getFontShorthand } from 'update-input-width';\nconst isBrowser = typeof window !== 'undefined';\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nconst isIEOrEdgeLegacy = isBrowser && /(MSIE|Trident\\/|Edge\\/)/.test(navigator.userAgent);\nconst isFirefox = isBrowser && /Firefox/.test(navigator.userAgent);\nfunction onFocus(event) {\n    const { target } = event;\n    if (isIEOrEdgeLegacy) {\n        requestAnimationFrame(() => target.select());\n    }\n    else {\n        target.select();\n    }\n}\nfunction updateInputWidthOnLoad(element) {\n    if (document.readyState === 'complete') {\n        return;\n    }\n    function onLoad() {\n        updateInputWidth(element);\n    }\n    window.addEventListener('load', onLoad);\n}\nfunction updateInputWidthOnFontLoad(element) {\n    if (!document.fonts) {\n        return;\n    }\n    const font = getFontShorthand(element);\n    if (!font) {\n        return;\n    }\n    const isFontLoaded = document.fonts.check(font);\n    if (isFontLoaded) {\n        return;\n    }\n    function onLoadingDone() {\n        updateInputWidth(element);\n    }\n    document.fonts.addEventListener('loadingdone', onLoadingDone);\n}\nfunction getSelectionString(input) {\n    /**\n     * window.getSelection().toString() returns empty string in IE11 and Firefox,\n     * so alternatives come first.\n     */\n    if (input &&\n        'selectionStart' in input &&\n        input.selectionStart !== null &&\n        'selectionEnd' in input &&\n        input.selectionEnd !== null) {\n        return input.value.slice(input.selectionStart, input.selectionEnd);\n    }\n    if ('getSelection' in window) {\n        const selection = window.getSelection();\n        return selection === null || selection === void 0 ? void 0 : selection.toString();\n    }\n    return null;\n}\nfunction makeOnKeyPress(maxLength) {\n    if (maxLength === null) {\n        return undefined;\n    }\n    /**\n     * Prevents keystrokes that would not produce a number or when value after keystroke would\n     * exceed maxLength.\n     */\n    return function onKeyPress(event) {\n        if (isFirefox) {\n            // See https://github.com/wojtekmaj/react-time-picker/issues/92\n            return;\n        }\n        const { key, target: input } = event;\n        const { value } = input;\n        const isNumberKey = key.length === 1 && /\\d/.test(key);\n        const selection = getSelectionString(input);\n        if (!isNumberKey || !(selection || value.length < maxLength)) {\n            event.preventDefault();\n        }\n    };\n}\nexport default function Input({ ariaLabel, autoFocus, className, disabled, inputRef, max, min, name, nameForClass, onChange, onKeyDown, onKeyUp, placeholder = '--', required, showLeadingZeros, step, value, }) {\n    useIsomorphicLayoutEffect(() => {\n        if (!inputRef || !inputRef.current) {\n            return;\n        }\n        updateInputWidth(inputRef.current);\n        updateInputWidthOnLoad(inputRef.current);\n        updateInputWidthOnFontLoad(inputRef.current);\n    }, [inputRef, value]);\n    const hasLeadingZero = showLeadingZeros &&\n        value &&\n        Number(value) < 10 &&\n        (value === '0' || !value.toString().startsWith('0'));\n    const maxLength = max ? max.toString().length : null;\n    return (_jsxs(_Fragment, { children: [hasLeadingZero ? _jsx(\"span\", { className: `${className}__leadingZero`, children: \"0\" }) : null, _jsx(\"input\", { \"aria-label\": ariaLabel, autoComplete: \"off\", \n                // biome-ignore lint/a11y/noAutofocus: This is up to developers' decision\n                autoFocus: autoFocus, className: clsx(`${className}__input`, `${className}__${nameForClass || name}`, hasLeadingZero && `${className}__input--hasLeadingZero`), \"data-input\": \"true\", disabled: disabled, inputMode: \"numeric\", max: max, min: min, name: name, onChange: onChange, onFocus: onFocus, onKeyDown: onKeyDown, onKeyPress: makeOnKeyPress(maxLength), onKeyUp: (event) => {\n                    updateInputWidth(event.target);\n                    if (onKeyUp) {\n                        onKeyUp(event);\n                    }\n                }, placeholder: placeholder, \n                // Assertion is needed for React 18 compatibility\n                ref: inputRef, required: required, step: step, type: \"number\", value: value !== null ? value : '' })] }));\n}\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,EAAEC,QAAQ,IAAIC,SAAS,EAAEC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACrF,SAASC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,gBAAgB,IAAIC,gBAAgB,QAAQ,oBAAoB;AACvE,MAAMC,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW;AAC/C,MAAMC,yBAAyB,GAAGF,SAAS,GAAGJ,eAAe,GAAGD,SAAS;AACzE,MAAMQ,gBAAgB,GAAGH,SAAS,IAAI,yBAAyB,CAACI,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AACzF,MAAMC,SAAS,GAAGP,SAAS,IAAI,SAAS,CAACI,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAClE,SAASE,OAAOA,CAACC,KAAK,EAAE;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxB,IAAIN,gBAAgB,EAAE;IAClBQ,qBAAqB,CAAC,MAAMD,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC;EAChD,CAAC,MACI;IACDF,MAAM,CAACE,MAAM,CAAC,CAAC;EACnB;AACJ;AACA,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EACrC,IAAIC,QAAQ,CAACC,UAAU,KAAK,UAAU,EAAE;IACpC;EACJ;EACA,SAASC,MAAMA,CAAA,EAAG;IACdnB,gBAAgB,CAACgB,OAAO,CAAC;EAC7B;EACAb,MAAM,CAACiB,gBAAgB,CAAC,MAAM,EAAED,MAAM,CAAC;AAC3C;AACA,SAASE,0BAA0BA,CAACL,OAAO,EAAE;EACzC,IAAI,CAACC,QAAQ,CAACK,KAAK,EAAE;IACjB;EACJ;EACA,MAAMC,IAAI,GAAGtB,gBAAgB,CAACe,OAAO,CAAC;EACtC,IAAI,CAACO,IAAI,EAAE;IACP;EACJ;EACA,MAAMC,YAAY,GAAGP,QAAQ,CAACK,KAAK,CAACG,KAAK,CAACF,IAAI,CAAC;EAC/C,IAAIC,YAAY,EAAE;IACd;EACJ;EACA,SAASE,aAAaA,CAAA,EAAG;IACrB1B,gBAAgB,CAACgB,OAAO,CAAC;EAC7B;EACAC,QAAQ,CAACK,KAAK,CAACF,gBAAgB,CAAC,aAAa,EAAEM,aAAa,CAAC;AACjE;AACA,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC/B;AACJ;AACA;AACA;EACI,IAAIA,KAAK,IACL,gBAAgB,IAAIA,KAAK,IACzBA,KAAK,CAACC,cAAc,KAAK,IAAI,IAC7B,cAAc,IAAID,KAAK,IACvBA,KAAK,CAACE,YAAY,KAAK,IAAI,EAAE;IAC7B,OAAOF,KAAK,CAACG,KAAK,CAACC,KAAK,CAACJ,KAAK,CAACC,cAAc,EAAED,KAAK,CAACE,YAAY,CAAC;EACtE;EACA,IAAI,cAAc,IAAI3B,MAAM,EAAE;IAC1B,MAAM8B,SAAS,GAAG9B,MAAM,CAAC+B,YAAY,CAAC,CAAC;IACvC,OAAOD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACE,QAAQ,CAAC,CAAC;EACrF;EACA,OAAO,IAAI;AACf;AACA,SAASC,cAAcA,CAACC,SAAS,EAAE;EAC/B,IAAIA,SAAS,KAAK,IAAI,EAAE;IACpB,OAAOC,SAAS;EACpB;EACA;AACJ;AACA;AACA;EACI,OAAO,SAASC,UAAUA,CAAC5B,KAAK,EAAE;IAC9B,IAAIF,SAAS,EAAE;MACX;MACA;IACJ;IACA,MAAM;MAAE+B,GAAG;MAAE5B,MAAM,EAAEgB;IAAM,CAAC,GAAGjB,KAAK;IACpC,MAAM;MAAEoB;IAAM,CAAC,GAAGH,KAAK;IACvB,MAAMa,WAAW,GAAGD,GAAG,CAACE,MAAM,KAAK,CAAC,IAAI,IAAI,CAACpC,IAAI,CAACkC,GAAG,CAAC;IACtD,MAAMP,SAAS,GAAGN,kBAAkB,CAACC,KAAK,CAAC;IAC3C,IAAI,CAACa,WAAW,IAAI,EAAER,SAAS,IAAIF,KAAK,CAACW,MAAM,GAAGL,SAAS,CAAC,EAAE;MAC1D1B,KAAK,CAACgC,cAAc,CAAC,CAAC;IAC1B;EACJ,CAAC;AACL;AACA,eAAe,SAASC,KAAKA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,GAAG;EAAEC,GAAG;EAAEC,IAAI;EAAEC,YAAY;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,OAAO;EAAEC,WAAW,GAAG,IAAI;EAAEC,QAAQ;EAAEC,gBAAgB;EAAEC,IAAI;EAAE7B;AAAO,CAAC,EAAE;EAC7M3B,yBAAyB,CAAC,MAAM;IAC5B,IAAI,CAAC6C,QAAQ,IAAI,CAACA,QAAQ,CAACY,OAAO,EAAE;MAChC;IACJ;IACA7D,gBAAgB,CAACiD,QAAQ,CAACY,OAAO,CAAC;IAClC9C,sBAAsB,CAACkC,QAAQ,CAACY,OAAO,CAAC;IACxCxC,0BAA0B,CAAC4B,QAAQ,CAACY,OAAO,CAAC;EAChD,CAAC,EAAE,CAACZ,QAAQ,EAAElB,KAAK,CAAC,CAAC;EACrB,MAAM+B,cAAc,GAAGH,gBAAgB,IACnC5B,KAAK,IACLgC,MAAM,CAAChC,KAAK,CAAC,GAAG,EAAE,KACjBA,KAAK,KAAK,GAAG,IAAI,CAACA,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC6B,UAAU,CAAC,GAAG,CAAC,CAAC;EACxD,MAAM3B,SAAS,GAAGa,GAAG,GAAGA,GAAG,CAACf,QAAQ,CAAC,CAAC,CAACO,MAAM,GAAG,IAAI;EACpD,OAAQ9C,KAAK,CAACF,SAAS,EAAE;IAAEuE,QAAQ,EAAE,CAACH,cAAc,GAAGtE,IAAI,CAAC,MAAM,EAAE;MAAEuD,SAAS,EAAE,GAAGA,SAAS,eAAe;MAAEkB,QAAQ,EAAE;IAAI,CAAC,CAAC,GAAG,IAAI,EAAEzE,IAAI,CAAC,OAAO,EAAE;MAAE,YAAY,EAAEqD,SAAS;MAAEqB,YAAY,EAAE,KAAK;MACvL;MACApB,SAAS,EAAEA,SAAS;MAAEC,SAAS,EAAEhD,IAAI,CAAC,GAAGgD,SAAS,SAAS,EAAE,GAAGA,SAAS,KAAKM,YAAY,IAAID,IAAI,EAAE,EAAEU,cAAc,IAAI,GAAGf,SAAS,yBAAyB,CAAC;MAAE,YAAY,EAAE,MAAM;MAAEC,QAAQ,EAAEA,QAAQ;MAAEmB,SAAS,EAAE,SAAS;MAAEjB,GAAG,EAAEA,GAAG;MAAEC,GAAG,EAAEA,GAAG;MAAEC,IAAI,EAAEA,IAAI;MAAEE,QAAQ,EAAEA,QAAQ;MAAE5C,OAAO,EAAEA,OAAO;MAAE6C,SAAS,EAAEA,SAAS;MAAEhB,UAAU,EAAEH,cAAc,CAACC,SAAS,CAAC;MAAEmB,OAAO,EAAG7C,KAAK,IAAK;QACnXX,gBAAgB,CAACW,KAAK,CAACC,MAAM,CAAC;QAC9B,IAAI4C,OAAO,EAAE;UACTA,OAAO,CAAC7C,KAAK,CAAC;QAClB;MACJ,CAAC;MAAE8C,WAAW,EAAEA,WAAW;MAC3B;MACAW,GAAG,EAAEnB,QAAQ;MAAES,QAAQ,EAAEA,QAAQ;MAAEE,IAAI,EAAEA,IAAI;MAAES,IAAI,EAAE,QAAQ;MAAEtC,KAAK,EAAEA,KAAK,KAAK,IAAI,GAAGA,KAAK,GAAG;IAAG,CAAC,CAAC;EAAE,CAAC,CAAC;AACxH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
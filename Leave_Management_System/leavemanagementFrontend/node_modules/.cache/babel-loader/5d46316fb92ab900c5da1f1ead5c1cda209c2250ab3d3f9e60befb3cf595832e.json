{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport { getDate, getMonthHuman, getYear } from '@wojtekmaj/date-utils';\nimport DayInput from './DateInput/DayInput.js';\nimport MonthInput from './DateInput/MonthInput.js';\nimport MonthSelect from './DateInput/MonthSelect.js';\nimport NativeInput from './DateInput/NativeInput.js';\nimport YearInput from './DateInput/YearInput.js';\nimport Divider from './Divider.js';\nimport { getFormatter } from './shared/dateFormatter.js';\nimport { getBegin, getEnd } from './shared/dates.js';\nimport { between } from './shared/utils.js';\nconst getFormatterOptionsCache = {};\nconst defaultMinDate = new Date();\ndefaultMinDate.setFullYear(1, 0, 1);\ndefaultMinDate.setHours(0, 0, 0, 0);\nconst defaultMaxDate = new Date(8.64e15);\nconst allViews = ['century', 'decade', 'year', 'month'];\nconst allValueTypes = [...allViews.slice(1), 'day'];\nfunction toDate(value) {\n  if (value instanceof Date) {\n    return value;\n  }\n  return new Date(value);\n}\n/**\n * Returns value type that can be returned with currently applied settings.\n */\nfunction getValueType(view) {\n  const index = allViews.indexOf(view);\n  return allValueTypes[index];\n}\nfunction getValue(value, index) {\n  const rawValue = Array.isArray(value) ? value[index] : value;\n  if (!rawValue) {\n    return null;\n  }\n  const valueDate = toDate(rawValue);\n  if (Number.isNaN(valueDate.getTime())) {\n    throw new Error(`Invalid date: ${value}`);\n  }\n  return valueDate;\n}\nfunction getDetailValue({\n  value,\n  minDate,\n  maxDate,\n  maxDetail\n}, index) {\n  const valuePiece = getValue(value, index);\n  if (!valuePiece) {\n    return null;\n  }\n  const valueType = getValueType(maxDetail);\n  const detailValueFrom = (() => {\n    switch (index) {\n      case 0:\n        return getBegin(valueType, valuePiece);\n      case 1:\n        return getEnd(valueType, valuePiece);\n      default:\n        throw new Error(`Invalid index value: ${index}`);\n    }\n  })();\n  return between(detailValueFrom, minDate, maxDate);\n}\nconst getDetailValueFrom = args => getDetailValue(args, 0);\nconst getDetailValueTo = args => getDetailValue(args, 1);\nconst getDetailValueArray = args => [getDetailValueFrom, getDetailValueTo].map(fn => fn(args));\nfunction isInternalInput(element) {\n  return element.dataset.input === 'true';\n}\nfunction findInput(element, property) {\n  let nextElement = element;\n  do {\n    nextElement = nextElement[property];\n  } while (nextElement && !isInternalInput(nextElement));\n  return nextElement;\n}\nfunction focus(element) {\n  if (element) {\n    element.focus();\n  }\n}\nfunction renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances) {\n  const usedFunctions = [];\n  const pattern = new RegExp(Object.keys(elementFunctions).map(el => `${el}+`).join('|'), 'g');\n  const matches = placeholder.match(pattern);\n  return placeholder.split(pattern).reduce((arr, element, index) => {\n    const divider = element &&\n    // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n    _jsx(Divider, {\n      children: element\n    }, `separator_${index}`);\n    arr.push(divider);\n    const currentMatch = matches === null || matches === void 0 ? void 0 : matches[index];\n    if (currentMatch) {\n      const renderFunction = elementFunctions[currentMatch] || elementFunctions[Object.keys(elementFunctions).find(elementFunction => currentMatch.match(elementFunction))];\n      if (!renderFunction) {\n        return arr;\n      }\n      if (!allowMultipleInstances && usedFunctions.includes(renderFunction)) {\n        arr.push(currentMatch);\n      } else {\n        arr.push(renderFunction(currentMatch, index));\n        usedFunctions.push(renderFunction);\n      }\n    }\n    return arr;\n  }, []);\n}\nexport default function DateInput({\n  autoFocus,\n  className,\n  dayAriaLabel,\n  dayPlaceholder,\n  disabled,\n  format,\n  isCalendarOpen: isCalendarOpenProps = null,\n  locale,\n  maxDate,\n  maxDetail = 'month',\n  minDate,\n  monthAriaLabel,\n  monthPlaceholder,\n  name = 'date',\n  nativeInputAriaLabel,\n  onChange: onChangeProps,\n  onInvalidChange,\n  required,\n  returnValue = 'start',\n  showLeadingZeros,\n  value: valueProps,\n  yearAriaLabel,\n  yearPlaceholder\n}) {\n  const [year, setYear] = useState(null);\n  const [month, setMonth] = useState(null);\n  const [day, setDay] = useState(null);\n  const [value, setValue] = useState(null);\n  const yearInput = useRef(null);\n  const monthInput = useRef(null);\n  const monthSelect = useRef(null);\n  const dayInput = useRef(null);\n  const [isCalendarOpen, setIsCalendarOpen] = useState(isCalendarOpenProps);\n  const lastPressedKey = useRef(undefined);\n  useEffect(() => {\n    setIsCalendarOpen(isCalendarOpenProps);\n  }, [isCalendarOpenProps]);\n  // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on props change\n  useEffect(() => {\n    const nextValue = getDetailValueFrom({\n      value: valueProps,\n      minDate,\n      maxDate,\n      maxDetail\n    });\n    if (nextValue) {\n      setYear(getYear(nextValue).toString());\n      setMonth(getMonthHuman(nextValue).toString());\n      setDay(getDate(nextValue).toString());\n      setValue(nextValue);\n    } else {\n      setYear(null);\n      setMonth(null);\n      setDay(null);\n      setValue(null);\n    }\n  }, [valueProps, minDate, maxDate, maxDetail,\n  // Toggling calendar visibility resets values\n  isCalendarOpen]);\n  const valueType = getValueType(maxDetail);\n  const formatDate = (() => {\n    const level = allViews.indexOf(maxDetail);\n    const formatterOptions = getFormatterOptionsCache[level] || (() => {\n      const options = {\n        year: 'numeric'\n      };\n      if (level >= 2) {\n        options.month = 'numeric';\n      }\n      if (level >= 3) {\n        options.day = 'numeric';\n      }\n      getFormatterOptionsCache[level] = options;\n      return options;\n    })();\n    return getFormatter(formatterOptions);\n  })();\n  /**\n   * Gets current value in a desired format.\n   */\n  function getProcessedValue(value) {\n    const processFunction = (() => {\n      switch (returnValue) {\n        case 'start':\n          return getDetailValueFrom;\n        case 'end':\n          return getDetailValueTo;\n        case 'range':\n          return getDetailValueArray;\n        default:\n          throw new Error('Invalid returnValue.');\n      }\n    })();\n    return processFunction({\n      value,\n      minDate,\n      maxDate,\n      maxDetail\n    });\n  }\n  const placeholder = format || (() => {\n    const year = 2017;\n    const monthIndex = 11;\n    const day = 11;\n    const date = new Date(year, monthIndex, day);\n    const formattedDate = formatDate(locale, date);\n    const datePieces = ['year', 'month', 'day'];\n    const datePieceReplacements = ['y', 'M', 'd'];\n    function formatDatePiece(name, dateToFormat) {\n      const formatterOptions = getFormatterOptionsCache[name] || (() => {\n        const options = {\n          [name]: 'numeric'\n        };\n        getFormatterOptionsCache[name] = options;\n        return options;\n      })();\n      return getFormatter(formatterOptions)(locale, dateToFormat).match(/\\d{1,}/);\n    }\n    let placeholder = formattedDate;\n    datePieces.forEach((datePiece, index) => {\n      const match = formatDatePiece(datePiece, date);\n      if (match) {\n        const formattedDatePiece = match[0];\n        const datePieceReplacement = datePieceReplacements[index];\n        placeholder = placeholder.replace(formattedDatePiece, datePieceReplacement);\n      }\n    });\n    // See https://github.com/wojtekmaj/react-date-picker/issues/396\n    placeholder = placeholder.replace('17', 'y');\n    return placeholder;\n  })();\n  const divider = (() => {\n    const dividers = placeholder.match(/[^0-9a-z]/i);\n    return dividers ? dividers[0] : null;\n  })();\n  function onClick(event) {\n    if (event.target === event.currentTarget) {\n      // Wrapper was directly clicked\n      const firstInput = event.target.children[1];\n      focus(firstInput);\n    }\n  }\n  function onKeyDown(event) {\n    lastPressedKey.current = event.key;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case divider:\n        {\n          event.preventDefault();\n          const {\n            target: input\n          } = event;\n          const property = event.key === 'ArrowLeft' ? 'previousElementSibling' : 'nextElementSibling';\n          const nextInput = findInput(input, property);\n          focus(nextInput);\n          break;\n        }\n      default:\n    }\n  }\n  function onKeyUp(event) {\n    const {\n      key,\n      target: input\n    } = event;\n    const isLastPressedKey = lastPressedKey.current === key;\n    if (!isLastPressedKey) {\n      return;\n    }\n    const isNumberKey = !Number.isNaN(Number(key));\n    if (!isNumberKey) {\n      return;\n    }\n    const max = input.getAttribute('max');\n    if (!max) {\n      return;\n    }\n    const {\n      value\n    } = input;\n    /**\n     * Given 1, the smallest possible number the user could type by adding another digit is 10.\n     * 10 would be a valid value given max = 12, so we won't jump to the next input.\n     * However, given 2, smallers possible number would be 20, and thus keeping the focus in\n     * this field doesn't make sense.\n     */\n    if (Number(value) * 10 > Number(max) || value.length >= max.length) {\n      const property = 'nextElementSibling';\n      const nextInput = findInput(input, property);\n      focus(nextInput);\n    }\n  }\n  /**\n   * Called after internal onChange. Checks input validity. If all fields are valid,\n   * calls props.onChange.\n   */\n  function onChangeExternal() {\n    if (!onChangeProps) {\n      return;\n    }\n    function filterBoolean(value) {\n      return Boolean(value);\n    }\n    const formElements = [dayInput.current, monthInput.current, monthSelect.current, yearInput.current].filter(filterBoolean);\n    const values = {};\n    for (const formElement of formElements) {\n      values[formElement.name] = 'valueAsNumber' in formElement ? formElement.valueAsNumber : Number(formElement.value);\n    }\n    const isEveryValueEmpty = formElements.every(formElement => !formElement.value);\n    if (isEveryValueEmpty) {\n      onChangeProps(null, false);\n      return;\n    }\n    const isEveryValueFilled = formElements.every(formElement => formElement.value);\n    const isEveryValueValid = formElements.every(formElement => formElement.validity.valid);\n    if (isEveryValueFilled && isEveryValueValid) {\n      const year = Number(values.year || new Date().getFullYear());\n      const monthIndex = Number(values.month || 1) - 1;\n      const day = Number(values.day || 1);\n      const proposedValue = new Date();\n      proposedValue.setFullYear(year, monthIndex, day);\n      proposedValue.setHours(0, 0, 0, 0);\n      const processedValue = getProcessedValue(proposedValue);\n      onChangeProps(processedValue, false);\n      return;\n    }\n    if (!onInvalidChange) {\n      return;\n    }\n    onInvalidChange();\n  }\n  /**\n   * Called when non-native date input is changed.\n   */\n  function onChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    switch (name) {\n      case 'year':\n        setYear(value);\n        break;\n      case 'month':\n        setMonth(value);\n        break;\n      case 'day':\n        setDay(value);\n        break;\n    }\n    onChangeExternal();\n  }\n  /**\n   * Called when native date input is changed.\n   */\n  function onChangeNative(event) {\n    const {\n      value\n    } = event.target;\n    if (!onChangeProps) {\n      return;\n    }\n    const processedValue = (() => {\n      if (!value) {\n        return null;\n      }\n      const [yearString, monthString, dayString] = value.split('-');\n      const year = Number(yearString);\n      const monthIndex = Number(monthString) - 1 || 0;\n      const day = Number(dayString) || 1;\n      const proposedValue = new Date();\n      proposedValue.setFullYear(year, monthIndex, day);\n      proposedValue.setHours(0, 0, 0, 0);\n      return proposedValue;\n    })();\n    onChangeProps(processedValue, false);\n  }\n  const commonInputProps = {\n    className,\n    disabled,\n    maxDate: maxDate || defaultMaxDate,\n    minDate: minDate || defaultMinDate,\n    onChange,\n    onKeyDown,\n    onKeyUp,\n    // This is only for showing validity when editing\n    required: Boolean(required || isCalendarOpen)\n  };\n  function renderDay(currentMatch, index) {\n    if (currentMatch && currentMatch.length > 2) {\n      throw new Error(`Unsupported token: ${currentMatch}`);\n    }\n    const showLeadingZerosFromFormat = currentMatch && currentMatch.length === 2;\n    return _jsx(DayInput, {\n      ...commonInputProps,\n      ariaLabel: dayAriaLabel,\n      autoFocus: index === 0 && autoFocus,\n      inputRef: dayInput,\n      month: month,\n      placeholder: dayPlaceholder,\n      showLeadingZeros: showLeadingZerosFromFormat || showLeadingZeros,\n      value: day,\n      year: year\n    }, \"day\");\n  }\n  function renderMonth(currentMatch, index) {\n    if (currentMatch && currentMatch.length > 4) {\n      throw new Error(`Unsupported token: ${currentMatch}`);\n    }\n    if (currentMatch.length > 2) {\n      return _jsx(MonthSelect, {\n        ...commonInputProps,\n        ariaLabel: monthAriaLabel,\n        autoFocus: index === 0 && autoFocus,\n        inputRef: monthSelect,\n        locale: locale,\n        placeholder: monthPlaceholder,\n        short: currentMatch.length === 3,\n        value: month,\n        year: year\n      }, \"month\");\n    }\n    const showLeadingZerosFromFormat = currentMatch && currentMatch.length === 2;\n    return _jsx(MonthInput, {\n      ...commonInputProps,\n      ariaLabel: monthAriaLabel,\n      autoFocus: index === 0 && autoFocus,\n      inputRef: monthInput,\n      placeholder: monthPlaceholder,\n      showLeadingZeros: showLeadingZerosFromFormat || showLeadingZeros,\n      value: month,\n      year: year\n    }, \"month\");\n  }\n  function renderYear(_currentMatch, index) {\n    return _jsx(YearInput, {\n      ...commonInputProps,\n      ariaLabel: yearAriaLabel,\n      autoFocus: index === 0 && autoFocus,\n      inputRef: yearInput,\n      placeholder: yearPlaceholder,\n      value: year,\n      valueType: valueType\n    }, \"year\");\n  }\n  function renderCustomInputsInternal() {\n    const elementFunctions = {\n      d: renderDay,\n      M: renderMonth,\n      y: renderYear\n    };\n    const allowMultipleInstances = typeof format !== 'undefined';\n    return renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances);\n  }\n  function renderNativeInput() {\n    return _jsx(NativeInput, {\n      ariaLabel: nativeInputAriaLabel,\n      disabled: disabled,\n      maxDate: maxDate || defaultMaxDate,\n      minDate: minDate || defaultMinDate,\n      name: name,\n      onChange: onChangeNative,\n      required: required,\n      value: value,\n      valueType: valueType\n    }, \"date\");\n  }\n  return (\n    // biome-ignore lint/a11y/useKeyWithClickEvents: This interaction is designed for mouse users only\n    // biome-ignore lint/a11y/noStaticElementInteractions: This interaction is designed for mouse users only\n    _jsxs(\"div\", {\n      className: className,\n      onClick: onClick,\n      children: [renderNativeInput(), renderCustomInputsInternal()]\n    })\n  );\n}","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","useEffect","useRef","useState","getDate","getMonthHuman","getYear","DayInput","MonthInput","MonthSelect","NativeInput","YearInput","Divider","getFormatter","getBegin","getEnd","between","getFormatterOptionsCache","defaultMinDate","Date","setFullYear","setHours","defaultMaxDate","allViews","allValueTypes","slice","toDate","value","getValueType","view","index","indexOf","getValue","rawValue","Array","isArray","valueDate","Number","isNaN","getTime","Error","getDetailValue","minDate","maxDate","maxDetail","valuePiece","valueType","detailValueFrom","getDetailValueFrom","args","getDetailValueTo","getDetailValueArray","map","fn","isInternalInput","element","dataset","input","findInput","property","nextElement","focus","renderCustomInputs","placeholder","elementFunctions","allowMultipleInstances","usedFunctions","pattern","RegExp","Object","keys","el","join","matches","match","split","reduce","arr","divider","children","push","currentMatch","renderFunction","find","elementFunction","includes","DateInput","autoFocus","className","dayAriaLabel","dayPlaceholder","disabled","format","isCalendarOpen","isCalendarOpenProps","locale","monthAriaLabel","monthPlaceholder","name","nativeInputAriaLabel","onChange","onChangeProps","onInvalidChange","required","returnValue","showLeadingZeros","valueProps","yearAriaLabel","yearPlaceholder","year","setYear","month","setMonth","day","setDay","setValue","yearInput","monthInput","monthSelect","dayInput","setIsCalendarOpen","lastPressedKey","undefined","nextValue","toString","formatDate","level","formatterOptions","options","getProcessedValue","processFunction","monthIndex","date","formattedDate","datePieces","datePieceReplacements","formatDatePiece","dateToFormat","forEach","datePiece","formattedDatePiece","datePieceReplacement","replace","dividers","onClick","event","target","currentTarget","firstInput","onKeyDown","current","key","preventDefault","nextInput","onKeyUp","isLastPressedKey","isNumberKey","max","getAttribute","length","onChangeExternal","filterBoolean","Boolean","formElements","filter","values","formElement","valueAsNumber","isEveryValueEmpty","every","isEveryValueFilled","isEveryValueValid","validity","valid","getFullYear","proposedValue","processedValue","onChangeNative","yearString","monthString","dayString","commonInputProps","renderDay","showLeadingZerosFromFormat","ariaLabel","inputRef","renderMonth","short","renderYear","_currentMatch","renderCustomInputsInternal","d","M","y","renderNativeInput"],"sources":["D:/New folder/Leave_Management_System/LeaveManagementSystemFrontend/leavemanagementFrontend/node_modules/react-date-picker/dist/DateInput.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport { getDate, getMonthHuman, getYear } from '@wojtekmaj/date-utils';\nimport DayInput from './DateInput/DayInput.js';\nimport MonthInput from './DateInput/MonthInput.js';\nimport MonthSelect from './DateInput/MonthSelect.js';\nimport NativeInput from './DateInput/NativeInput.js';\nimport YearInput from './DateInput/YearInput.js';\nimport Divider from './Divider.js';\nimport { getFormatter } from './shared/dateFormatter.js';\nimport { getBegin, getEnd } from './shared/dates.js';\nimport { between } from './shared/utils.js';\nconst getFormatterOptionsCache = {};\nconst defaultMinDate = new Date();\ndefaultMinDate.setFullYear(1, 0, 1);\ndefaultMinDate.setHours(0, 0, 0, 0);\nconst defaultMaxDate = new Date(8.64e15);\nconst allViews = ['century', 'decade', 'year', 'month'];\nconst allValueTypes = [...allViews.slice(1), 'day'];\nfunction toDate(value) {\n    if (value instanceof Date) {\n        return value;\n    }\n    return new Date(value);\n}\n/**\n * Returns value type that can be returned with currently applied settings.\n */\nfunction getValueType(view) {\n    const index = allViews.indexOf(view);\n    return allValueTypes[index];\n}\nfunction getValue(value, index) {\n    const rawValue = Array.isArray(value) ? value[index] : value;\n    if (!rawValue) {\n        return null;\n    }\n    const valueDate = toDate(rawValue);\n    if (Number.isNaN(valueDate.getTime())) {\n        throw new Error(`Invalid date: ${value}`);\n    }\n    return valueDate;\n}\nfunction getDetailValue({ value, minDate, maxDate, maxDetail }, index) {\n    const valuePiece = getValue(value, index);\n    if (!valuePiece) {\n        return null;\n    }\n    const valueType = getValueType(maxDetail);\n    const detailValueFrom = (() => {\n        switch (index) {\n            case 0:\n                return getBegin(valueType, valuePiece);\n            case 1:\n                return getEnd(valueType, valuePiece);\n            default:\n                throw new Error(`Invalid index value: ${index}`);\n        }\n    })();\n    return between(detailValueFrom, minDate, maxDate);\n}\nconst getDetailValueFrom = (args) => getDetailValue(args, 0);\nconst getDetailValueTo = (args) => getDetailValue(args, 1);\nconst getDetailValueArray = (args) => [getDetailValueFrom, getDetailValueTo].map((fn) => fn(args));\nfunction isInternalInput(element) {\n    return element.dataset.input === 'true';\n}\nfunction findInput(element, property) {\n    let nextElement = element;\n    do {\n        nextElement = nextElement[property];\n    } while (nextElement && !isInternalInput(nextElement));\n    return nextElement;\n}\nfunction focus(element) {\n    if (element) {\n        element.focus();\n    }\n}\nfunction renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances) {\n    const usedFunctions = [];\n    const pattern = new RegExp(Object.keys(elementFunctions)\n        .map((el) => `${el}+`)\n        .join('|'), 'g');\n    const matches = placeholder.match(pattern);\n    return placeholder.split(pattern).reduce((arr, element, index) => {\n        const divider = element && (\n        // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n        _jsx(Divider, { children: element }, `separator_${index}`));\n        arr.push(divider);\n        const currentMatch = matches === null || matches === void 0 ? void 0 : matches[index];\n        if (currentMatch) {\n            const renderFunction = elementFunctions[currentMatch] ||\n                elementFunctions[Object.keys(elementFunctions).find((elementFunction) => currentMatch.match(elementFunction))];\n            if (!renderFunction) {\n                return arr;\n            }\n            if (!allowMultipleInstances && usedFunctions.includes(renderFunction)) {\n                arr.push(currentMatch);\n            }\n            else {\n                arr.push(renderFunction(currentMatch, index));\n                usedFunctions.push(renderFunction);\n            }\n        }\n        return arr;\n    }, []);\n}\nexport default function DateInput({ autoFocus, className, dayAriaLabel, dayPlaceholder, disabled, format, isCalendarOpen: isCalendarOpenProps = null, locale, maxDate, maxDetail = 'month', minDate, monthAriaLabel, monthPlaceholder, name = 'date', nativeInputAriaLabel, onChange: onChangeProps, onInvalidChange, required, returnValue = 'start', showLeadingZeros, value: valueProps, yearAriaLabel, yearPlaceholder, }) {\n    const [year, setYear] = useState(null);\n    const [month, setMonth] = useState(null);\n    const [day, setDay] = useState(null);\n    const [value, setValue] = useState(null);\n    const yearInput = useRef(null);\n    const monthInput = useRef(null);\n    const monthSelect = useRef(null);\n    const dayInput = useRef(null);\n    const [isCalendarOpen, setIsCalendarOpen] = useState(isCalendarOpenProps);\n    const lastPressedKey = useRef(undefined);\n    useEffect(() => {\n        setIsCalendarOpen(isCalendarOpenProps);\n    }, [isCalendarOpenProps]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: useEffect intentionally triggered on props change\n    useEffect(() => {\n        const nextValue = getDetailValueFrom({\n            value: valueProps,\n            minDate,\n            maxDate,\n            maxDetail,\n        });\n        if (nextValue) {\n            setYear(getYear(nextValue).toString());\n            setMonth(getMonthHuman(nextValue).toString());\n            setDay(getDate(nextValue).toString());\n            setValue(nextValue);\n        }\n        else {\n            setYear(null);\n            setMonth(null);\n            setDay(null);\n            setValue(null);\n        }\n    }, [\n        valueProps,\n        minDate,\n        maxDate,\n        maxDetail,\n        // Toggling calendar visibility resets values\n        isCalendarOpen,\n    ]);\n    const valueType = getValueType(maxDetail);\n    const formatDate = (() => {\n        const level = allViews.indexOf(maxDetail);\n        const formatterOptions = getFormatterOptionsCache[level] ||\n            (() => {\n                const options = { year: 'numeric' };\n                if (level >= 2) {\n                    options.month = 'numeric';\n                }\n                if (level >= 3) {\n                    options.day = 'numeric';\n                }\n                getFormatterOptionsCache[level] = options;\n                return options;\n            })();\n        return getFormatter(formatterOptions);\n    })();\n    /**\n     * Gets current value in a desired format.\n     */\n    function getProcessedValue(value) {\n        const processFunction = (() => {\n            switch (returnValue) {\n                case 'start':\n                    return getDetailValueFrom;\n                case 'end':\n                    return getDetailValueTo;\n                case 'range':\n                    return getDetailValueArray;\n                default:\n                    throw new Error('Invalid returnValue.');\n            }\n        })();\n        return processFunction({\n            value,\n            minDate,\n            maxDate,\n            maxDetail,\n        });\n    }\n    const placeholder = format ||\n        (() => {\n            const year = 2017;\n            const monthIndex = 11;\n            const day = 11;\n            const date = new Date(year, monthIndex, day);\n            const formattedDate = formatDate(locale, date);\n            const datePieces = ['year', 'month', 'day'];\n            const datePieceReplacements = ['y', 'M', 'd'];\n            function formatDatePiece(name, dateToFormat) {\n                const formatterOptions = getFormatterOptionsCache[name] ||\n                    (() => {\n                        const options = { [name]: 'numeric' };\n                        getFormatterOptionsCache[name] = options;\n                        return options;\n                    })();\n                return getFormatter(formatterOptions)(locale, dateToFormat).match(/\\d{1,}/);\n            }\n            let placeholder = formattedDate;\n            datePieces.forEach((datePiece, index) => {\n                const match = formatDatePiece(datePiece, date);\n                if (match) {\n                    const formattedDatePiece = match[0];\n                    const datePieceReplacement = datePieceReplacements[index];\n                    placeholder = placeholder.replace(formattedDatePiece, datePieceReplacement);\n                }\n            });\n            // See https://github.com/wojtekmaj/react-date-picker/issues/396\n            placeholder = placeholder.replace('17', 'y');\n            return placeholder;\n        })();\n    const divider = (() => {\n        const dividers = placeholder.match(/[^0-9a-z]/i);\n        return dividers ? dividers[0] : null;\n    })();\n    function onClick(event) {\n        if (event.target === event.currentTarget) {\n            // Wrapper was directly clicked\n            const firstInput = event.target.children[1];\n            focus(firstInput);\n        }\n    }\n    function onKeyDown(event) {\n        lastPressedKey.current = event.key;\n        switch (event.key) {\n            case 'ArrowLeft':\n            case 'ArrowRight':\n            case divider: {\n                event.preventDefault();\n                const { target: input } = event;\n                const property = event.key === 'ArrowLeft' ? 'previousElementSibling' : 'nextElementSibling';\n                const nextInput = findInput(input, property);\n                focus(nextInput);\n                break;\n            }\n            default:\n        }\n    }\n    function onKeyUp(event) {\n        const { key, target: input } = event;\n        const isLastPressedKey = lastPressedKey.current === key;\n        if (!isLastPressedKey) {\n            return;\n        }\n        const isNumberKey = !Number.isNaN(Number(key));\n        if (!isNumberKey) {\n            return;\n        }\n        const max = input.getAttribute('max');\n        if (!max) {\n            return;\n        }\n        const { value } = input;\n        /**\n         * Given 1, the smallest possible number the user could type by adding another digit is 10.\n         * 10 would be a valid value given max = 12, so we won't jump to the next input.\n         * However, given 2, smallers possible number would be 20, and thus keeping the focus in\n         * this field doesn't make sense.\n         */\n        if (Number(value) * 10 > Number(max) || value.length >= max.length) {\n            const property = 'nextElementSibling';\n            const nextInput = findInput(input, property);\n            focus(nextInput);\n        }\n    }\n    /**\n     * Called after internal onChange. Checks input validity. If all fields are valid,\n     * calls props.onChange.\n     */\n    function onChangeExternal() {\n        if (!onChangeProps) {\n            return;\n        }\n        function filterBoolean(value) {\n            return Boolean(value);\n        }\n        const formElements = [\n            dayInput.current,\n            monthInput.current,\n            monthSelect.current,\n            yearInput.current,\n        ].filter(filterBoolean);\n        const values = {};\n        for (const formElement of formElements) {\n            values[formElement.name] =\n                'valueAsNumber' in formElement ? formElement.valueAsNumber : Number(formElement.value);\n        }\n        const isEveryValueEmpty = formElements.every((formElement) => !formElement.value);\n        if (isEveryValueEmpty) {\n            onChangeProps(null, false);\n            return;\n        }\n        const isEveryValueFilled = formElements.every((formElement) => formElement.value);\n        const isEveryValueValid = formElements.every((formElement) => formElement.validity.valid);\n        if (isEveryValueFilled && isEveryValueValid) {\n            const year = Number(values.year || new Date().getFullYear());\n            const monthIndex = Number(values.month || 1) - 1;\n            const day = Number(values.day || 1);\n            const proposedValue = new Date();\n            proposedValue.setFullYear(year, monthIndex, day);\n            proposedValue.setHours(0, 0, 0, 0);\n            const processedValue = getProcessedValue(proposedValue);\n            onChangeProps(processedValue, false);\n            return;\n        }\n        if (!onInvalidChange) {\n            return;\n        }\n        onInvalidChange();\n    }\n    /**\n     * Called when non-native date input is changed.\n     */\n    function onChange(event) {\n        const { name, value } = event.target;\n        switch (name) {\n            case 'year':\n                setYear(value);\n                break;\n            case 'month':\n                setMonth(value);\n                break;\n            case 'day':\n                setDay(value);\n                break;\n        }\n        onChangeExternal();\n    }\n    /**\n     * Called when native date input is changed.\n     */\n    function onChangeNative(event) {\n        const { value } = event.target;\n        if (!onChangeProps) {\n            return;\n        }\n        const processedValue = (() => {\n            if (!value) {\n                return null;\n            }\n            const [yearString, monthString, dayString] = value.split('-');\n            const year = Number(yearString);\n            const monthIndex = Number(monthString) - 1 || 0;\n            const day = Number(dayString) || 1;\n            const proposedValue = new Date();\n            proposedValue.setFullYear(year, monthIndex, day);\n            proposedValue.setHours(0, 0, 0, 0);\n            return proposedValue;\n        })();\n        onChangeProps(processedValue, false);\n    }\n    const commonInputProps = {\n        className,\n        disabled,\n        maxDate: maxDate || defaultMaxDate,\n        minDate: minDate || defaultMinDate,\n        onChange,\n        onKeyDown,\n        onKeyUp,\n        // This is only for showing validity when editing\n        required: Boolean(required || isCalendarOpen),\n    };\n    function renderDay(currentMatch, index) {\n        if (currentMatch && currentMatch.length > 2) {\n            throw new Error(`Unsupported token: ${currentMatch}`);\n        }\n        const showLeadingZerosFromFormat = currentMatch && currentMatch.length === 2;\n        return (_jsx(DayInput, { ...commonInputProps, ariaLabel: dayAriaLabel, autoFocus: index === 0 && autoFocus, inputRef: dayInput, month: month, placeholder: dayPlaceholder, showLeadingZeros: showLeadingZerosFromFormat || showLeadingZeros, value: day, year: year }, \"day\"));\n    }\n    function renderMonth(currentMatch, index) {\n        if (currentMatch && currentMatch.length > 4) {\n            throw new Error(`Unsupported token: ${currentMatch}`);\n        }\n        if (currentMatch.length > 2) {\n            return (_jsx(MonthSelect, { ...commonInputProps, ariaLabel: monthAriaLabel, autoFocus: index === 0 && autoFocus, inputRef: monthSelect, locale: locale, placeholder: monthPlaceholder, short: currentMatch.length === 3, value: month, year: year }, \"month\"));\n        }\n        const showLeadingZerosFromFormat = currentMatch && currentMatch.length === 2;\n        return (_jsx(MonthInput, { ...commonInputProps, ariaLabel: monthAriaLabel, autoFocus: index === 0 && autoFocus, inputRef: monthInput, placeholder: monthPlaceholder, showLeadingZeros: showLeadingZerosFromFormat || showLeadingZeros, value: month, year: year }, \"month\"));\n    }\n    function renderYear(_currentMatch, index) {\n        return (_jsx(YearInput, { ...commonInputProps, ariaLabel: yearAriaLabel, autoFocus: index === 0 && autoFocus, inputRef: yearInput, placeholder: yearPlaceholder, value: year, valueType: valueType }, \"year\"));\n    }\n    function renderCustomInputsInternal() {\n        const elementFunctions = {\n            d: renderDay,\n            M: renderMonth,\n            y: renderYear,\n        };\n        const allowMultipleInstances = typeof format !== 'undefined';\n        return renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances);\n    }\n    function renderNativeInput() {\n        return (_jsx(NativeInput, { ariaLabel: nativeInputAriaLabel, disabled: disabled, maxDate: maxDate || defaultMaxDate, minDate: minDate || defaultMinDate, name: name, onChange: onChangeNative, required: required, value: value, valueType: valueType }, \"date\"));\n    }\n    return (\n    // biome-ignore lint/a11y/useKeyWithClickEvents: This interaction is designed for mouse users only\n    // biome-ignore lint/a11y/noStaticElementInteractions: This interaction is designed for mouse users only\n    _jsxs(\"div\", { className: className, onClick: onClick, children: [renderNativeInput(), renderCustomInputsInternal()] }));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}